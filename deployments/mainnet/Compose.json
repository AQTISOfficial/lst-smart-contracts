{
  "address": "0x8EFe9A9f4779A2B81D4f3A08b392A6F2389AeB17",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_qeth",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_qsd",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_qrt",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMinAmountBuy",
          "type": "uint256"
        }
      ],
      "name": "MinAmountBuyChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_percentageQeth",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_percentageQsd",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_percentageQrt",
          "type": "uint256"
        }
      ],
      "name": "distributeFunds",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minAmountBuy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "qeth",
      "outputs": [
        {
          "internalType": "contract IQETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "qrt",
      "outputs": [
        {
          "internalType": "contract IQRT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "qsd",
      "outputs": [
        {
          "internalType": "contract IQSD",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newMinAmountBuy",
          "type": "uint256"
        }
      ],
      "name": "setMinAmountBuy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x95efd2d0924ac29a54c50d37ba31004b5acb311d00b508fde4bcfa414151fea5",
  "receipt": {
    "to": null,
    "from": "0x9e3c17d39bE89bbFCCf0e1A4f266C0271C05C228",
    "contractAddress": "0x8EFe9A9f4779A2B81D4f3A08b392A6F2389AeB17",
    "transactionIndex": 2,
    "gasUsed": "863857",
    "logsBloom": "0x00000000000000000008000000000000000000000000000000800000400000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000020000000000000000000800000000000000000000000000000000480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000100000",
    "blockHash": "0xc99cba88b6f5d3bc4845afa269409ebfa6abbd7cdf80f5275b2a56e6049b15b6",
    "transactionHash": "0x95efd2d0924ac29a54c50d37ba31004b5acb311d00b508fde4bcfa414151fea5",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 19675440,
        "transactionHash": "0x95efd2d0924ac29a54c50d37ba31004b5acb311d00b508fde4bcfa414151fea5",
        "address": "0x8EFe9A9f4779A2B81D4f3A08b392A6F2389AeB17",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000009e3c17d39be89bbfccf0e1a4f266c0271c05c228"
        ],
        "data": "0x",
        "logIndex": 58,
        "blockHash": "0xc99cba88b6f5d3bc4845afa269409ebfa6abbd7cdf80f5275b2a56e6049b15b6"
      }
    ],
    "blockNumber": 19675440,
    "cumulativeGasUsed": "3362746",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xA0Ed5eF008557580247d3C813710B681e9cB5700",
    "0x890C32ea99ceb0De94600c421745FC8131750514",
    "0x7dABa72970B3330B40e58f4d81BbE31f9f6c1609"
  ],
  "numDeployments": 1,
  "solcInputHash": "9087a8a1961bde39b6a21ecb15b711d3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_qeth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_qsd\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_qrt\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinAmountBuy\",\"type\":\"uint256\"}],\"name\":\"MinAmountBuyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentageQeth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_percentageQsd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_percentageQrt\",\"type\":\"uint256\"}],\"name\":\"distributeFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAmountBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"qeth\",\"outputs\":[{\"internalType\":\"contract IQETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"qrt\",\"outputs\":[{\"internalType\":\"contract IQRT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"qsd\",\"outputs\":[{\"internalType\":\"contract IQSD\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newMinAmountBuy\",\"type\":\"uint256\"}],\"name\":\"setMinAmountBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"distributeFunds(uint256,uint256,uint256)\":{\"details\":\"This function is nonReentrant to prevent reentrancy attacks\",\"params\":{\"_percentageQeth\":\"percentage of ETH to send to QETH\",\"_percentageQrt\":\"percentage of ETH to send to QRT\",\"_percentageQsd\":\"percentage of ETH to send to QSD\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"distributeFunds(uint256,uint256,uint256)\":{\"notice\":\"Distribute FundsThis function distributes ETH to the LST contracts\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Compose.sol\":\"Compose\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"contracts/Compose.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.23;\\n\\n/**\\n * @title Compose LST Contract\\n * @author A Q T I S / @AQTIS-Team\\n * @notice This contract is used to distribute ETH to the LST contracts\\n * @dev This contract uses OpenZeppelin contracts for added security.\\n */\\n\\n// ======= OpenZeppelin v5.0.1 ======= //\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport {ReentrancyGuard} from \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\n\\n// ======= Interfaces ======= //\\ninterface IQETH {\\n    function buyTokensWithEth() external payable;\\n}\\n\\ninterface IQSD {\\n    function buyTokensWithEth() external payable;\\n}\\n\\ninterface IQRT {\\n    function buyTokensWithEth() external payable;\\n}\\n\\n// ======= Compose Contract ======= //\\ncontract Compose is Ownable, ReentrancyGuard {\\n    IQETH public immutable qeth;\\n    IQSD public immutable qsd;\\n    IQRT public immutable qrt;\\n\\n    uint256 public minAmountBuy = 0.05 ether;\\n\\n    event MinAmountBuyChanged(uint256 newMinAmountBuy);\\n\\n    // Constructor\\n    constructor(address _qeth, address _qsd, address _qrt) Ownable(msg.sender) {\\n        qeth = IQETH(_qeth);\\n        qsd = IQSD(_qsd);\\n        qrt = IQRT(_qrt);\\n    }\\n\\n    // Functions\\n    function setMinAmountBuy(uint256 _newMinAmountBuy) external onlyOwner {\\n        require(_newMinAmountBuy > 0, \\\"Min amount buy must be greater than 0\\\");\\n        minAmountBuy = _newMinAmountBuy;\\n        emit MinAmountBuyChanged(_newMinAmountBuy);\\n    }\\n\\n    /// Distribute Funds\\n    /// @notice This function distributes ETH to the LST contracts\\n    /// @dev This function is nonReentrant to prevent reentrancy attacks\\n    /// @param _percentageQeth percentage of ETH to send to QETH\\n    /// @param _percentageQsd percentage of ETH to send to QSD\\n    /// @param _percentageQrt percentage of ETH to send to QRT\\n    function distributeFunds(\\n        uint256 _percentageQeth,\\n        uint256 _percentageQsd,\\n        uint256 _percentageQrt\\n    ) external payable nonReentrant {\\n        require(\\n            _percentageQeth + _percentageQsd + _percentageQrt == 100,\\n            \\\"Percentages must add up to 100\\\"\\n        );\\n        \\n        require(\\n            msg.value >= minAmountBuy,\\n            \\\"Amount sent is less than minimum amount\\\"\\n        );\\n\\n        uint256 amountQeth = (msg.value * _percentageQeth) / 100;\\n        uint256 amountQsd = (msg.value * _percentageQsd) / 100;\\n        uint256 amountQrt = msg.value - amountQeth - amountQsd;\\n\\n        if (amountQeth > 0) {\\n            uint256 balanceBefore = IERC20(address(qeth)).balanceOf(address(this));\\n            qeth.buyTokensWithEth{ value: amountQeth }();\\n            uint256 tokensMinted = IERC20(address(qeth)).balanceOf(address(this)) - balanceBefore;\\n            transferTokens(IERC20(address(qeth)), msg.sender, tokensMinted);\\n        }\\n        \\n        if (amountQsd > 0) {\\n            uint256 balanceBefore = IERC20(address(qsd)).balanceOf(address(this));\\n            qsd.buyTokensWithEth{ value: amountQsd }();\\n            uint256 tokensMinted = IERC20(address(qsd)).balanceOf(address(this)) - balanceBefore;\\n            transferTokens(IERC20(address(qsd)), msg.sender, tokensMinted);\\n        }\\n\\n        if (amountQrt > 0) {\\n            uint256 balanceBefore = IERC20(address(qrt)).balanceOf(address(this));\\n            qrt.buyTokensWithEth{ value: amountQrt }();\\n            uint256 tokensMinted = IERC20(address(qrt)).balanceOf(address(this)) - balanceBefore;\\n            transferTokens(IERC20(address(qrt)), msg.sender, tokensMinted);\\n        }\\n    }\\n\\n    function transferTokens(IERC20 tokenContract, address recipient, uint256 amount) private {\\n        require(\\n            tokenContract.transfer(recipient, amount),\\n            \\\"Token transfer failed\\\"\\n        );\\n    }\\n\\n    // Fallback function to accept ETH\\n    receive() external payable {}\\n\\n    // Function to withdraw ETH from the contract (for safety)\\n    function withdraw() external onlyOwner {\\n        payable(msg.sender).transfer(address(this).balance);\\n    }\\n}\\n\",\"keccak256\":\"0xac786e7d6628fe7ff43dac14c96d99ead41e51ff2267662198b4bf876493d8ea\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e060405266b1a2bc2ec5000060025534801561001b57600080fd5b50604051610f2a380380610f2a83398101604081905261003a916100f7565b338061006057604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100698161008b565b50600180556001600160a01b0392831660805290821660a0521660c05261013a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100f257600080fd5b919050565b60008060006060848603121561010c57600080fd5b610115846100db565b9250610123602085016100db565b9150610131604085016100db565b90509250925092565b60805160a05160c051610d6e6101bc600039600081816101500152818161082f015281816108a60152818161093901526109b601526000818161018401528181610661015281816106d80152818161076b01526107e801526000818160d3015281816104930152818161050a0152818161059d015261061a0152610d6e6000f3fe6080604052600436106100b55760003560e01c80638da5cb5b11610069578063a9c8d4881161004e578063a9c8d488146101e8578063dd97dc8f14610208578063f2fde38b1461021b57600080fd5b80638da5cb5b146101a65780639bdd940c146101c457600080fd5b8063715018a61161009a578063715018a6146101295780637578fcf71461013e578063882bbdcd1461017257600080fd5b806337cf497c146100c15780633ccfd60b1461011257600080fd5b366100bc57005b600080fd5b3480156100cd57600080fd5b506100f57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011e57600080fd5b5061012761023b565b005b34801561013557600080fd5b50610127610272565b34801561014a57600080fd5b506100f57f000000000000000000000000000000000000000000000000000000000000000081565b34801561017e57600080fd5b506100f57f000000000000000000000000000000000000000000000000000000000000000081565b3480156101b257600080fd5b506000546001600160a01b03166100f5565b3480156101d057600080fd5b506101da60025481565b604051908152602001610109565b3480156101f457600080fd5b50610127610203366004610c0d565b610286565b610127610216366004610c26565b610344565b34801561022757600080fd5b50610127610236366004610c52565b6109f0565b610243610a44565b60405133904780156108fc02916000818181858888f1935050505015801561026f573d6000803e3d6000fd5b50565b61027a610a44565b6102846000610a8a565b565b61028e610a44565b600081116103095760405162461bcd60e51b815260206004820152602560248201527f4d696e20616d6f756e7420627579206d7573742062652067726561746572207460448201527f68616e203000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60028190556040518181527f4d02ac2bfe90115b91d59c32ad6d07ea86d935aedb62055d844decbc0a6cb4719060200160405180910390a150565b61034c610af2565b806103578385610c98565b6103619190610c98565b6064146103b05760405162461bcd60e51b815260206004820152601e60248201527f50657263656e7461676573206d7573742061646420757020746f2031303000006044820152606401610300565b6002543410156104285760405162461bcd60e51b815260206004820152602760248201527f416d6f756e742073656e74206973206c657373207468616e206d696e696d756d60448201527f20616d6f756e74000000000000000000000000000000000000000000000000006064820152608401610300565b600060646104368534610cb1565b6104409190610cc8565b9050600060646104508534610cb1565b61045a9190610cc8565b90506000816104698434610cea565b6104739190610cea565b90508215610643576040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156104e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105069190610cfd565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d87744cf856040518263ffffffff1660e01b81526004016000604051808303818588803b15801561056357600080fd5b505af1158015610577573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600093508492506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691506370a0823190602401602060405180830381865afa1580156105e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106099190610cfd565b6106139190610cea565b90506106407f00000000000000000000000000000000000000000000000000000000000000003383610b35565b50505b8115610811576040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156106b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d49190610cfd565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d87744cf846040518263ffffffff1660e01b81526004016000604051808303818588803b15801561073157600080fd5b505af1158015610745573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600093508492506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691506370a0823190602401602060405180830381865afa1580156107b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d79190610cfd565b6107e19190610cea565b905061080e7f00000000000000000000000000000000000000000000000000000000000000003383610b35565b50505b80156109df576040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561087e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a29190610cfd565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d87744cf836040518263ffffffff1660e01b81526004016000604051808303818588803b1580156108ff57600080fd5b505af1158015610913573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600093508492506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691506370a0823190602401602060405180830381865afa158015610981573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a59190610cfd565b6109af9190610cea565b90506109dc7f00000000000000000000000000000000000000000000000000000000000000003383610b35565b50505b5050506109eb60018055565b505050565b6109f8610a44565b6001600160a01b038116610a3b576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610300565b61026f81610a8a565b6000546001600160a01b03163314610284576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610300565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600260015403610b2e576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600155565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610b9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc19190610d16565b6109eb5760405162461bcd60e51b815260206004820152601560248201527f546f6b656e207472616e73666572206661696c656400000000000000000000006044820152606401610300565b600060208284031215610c1f57600080fd5b5035919050565b600080600060608486031215610c3b57600080fd5b505081359360208301359350604090920135919050565b600060208284031215610c6457600080fd5b81356001600160a01b0381168114610c7b57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610cab57610cab610c82565b92915050565b8082028115828204841417610cab57610cab610c82565b600082610ce557634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610cab57610cab610c82565b600060208284031215610d0f57600080fd5b5051919050565b600060208284031215610d2857600080fd5b81518015158114610c7b57600080fdfea2646970667358221220d5c2c0bd4f2fbb24ecd20f2fa739798a1af1cbfe156c4a342ec3de85c5c667af64736f6c63430008170033",
  "deployedBytecode": "0x6080604052600436106100b55760003560e01c80638da5cb5b11610069578063a9c8d4881161004e578063a9c8d488146101e8578063dd97dc8f14610208578063f2fde38b1461021b57600080fd5b80638da5cb5b146101a65780639bdd940c146101c457600080fd5b8063715018a61161009a578063715018a6146101295780637578fcf71461013e578063882bbdcd1461017257600080fd5b806337cf497c146100c15780633ccfd60b1461011257600080fd5b366100bc57005b600080fd5b3480156100cd57600080fd5b506100f57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011e57600080fd5b5061012761023b565b005b34801561013557600080fd5b50610127610272565b34801561014a57600080fd5b506100f57f000000000000000000000000000000000000000000000000000000000000000081565b34801561017e57600080fd5b506100f57f000000000000000000000000000000000000000000000000000000000000000081565b3480156101b257600080fd5b506000546001600160a01b03166100f5565b3480156101d057600080fd5b506101da60025481565b604051908152602001610109565b3480156101f457600080fd5b50610127610203366004610c0d565b610286565b610127610216366004610c26565b610344565b34801561022757600080fd5b50610127610236366004610c52565b6109f0565b610243610a44565b60405133904780156108fc02916000818181858888f1935050505015801561026f573d6000803e3d6000fd5b50565b61027a610a44565b6102846000610a8a565b565b61028e610a44565b600081116103095760405162461bcd60e51b815260206004820152602560248201527f4d696e20616d6f756e7420627579206d7573742062652067726561746572207460448201527f68616e203000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60028190556040518181527f4d02ac2bfe90115b91d59c32ad6d07ea86d935aedb62055d844decbc0a6cb4719060200160405180910390a150565b61034c610af2565b806103578385610c98565b6103619190610c98565b6064146103b05760405162461bcd60e51b815260206004820152601e60248201527f50657263656e7461676573206d7573742061646420757020746f2031303000006044820152606401610300565b6002543410156104285760405162461bcd60e51b815260206004820152602760248201527f416d6f756e742073656e74206973206c657373207468616e206d696e696d756d60448201527f20616d6f756e74000000000000000000000000000000000000000000000000006064820152608401610300565b600060646104368534610cb1565b6104409190610cc8565b9050600060646104508534610cb1565b61045a9190610cc8565b90506000816104698434610cea565b6104739190610cea565b90508215610643576040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156104e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105069190610cfd565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d87744cf856040518263ffffffff1660e01b81526004016000604051808303818588803b15801561056357600080fd5b505af1158015610577573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600093508492506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691506370a0823190602401602060405180830381865afa1580156105e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106099190610cfd565b6106139190610cea565b90506106407f00000000000000000000000000000000000000000000000000000000000000003383610b35565b50505b8115610811576040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156106b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d49190610cfd565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d87744cf846040518263ffffffff1660e01b81526004016000604051808303818588803b15801561073157600080fd5b505af1158015610745573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600093508492506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691506370a0823190602401602060405180830381865afa1580156107b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d79190610cfd565b6107e19190610cea565b905061080e7f00000000000000000000000000000000000000000000000000000000000000003383610b35565b50505b80156109df576040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561087e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a29190610cfd565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d87744cf836040518263ffffffff1660e01b81526004016000604051808303818588803b1580156108ff57600080fd5b505af1158015610913573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600093508492506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691506370a0823190602401602060405180830381865afa158015610981573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a59190610cfd565b6109af9190610cea565b90506109dc7f00000000000000000000000000000000000000000000000000000000000000003383610b35565b50505b5050506109eb60018055565b505050565b6109f8610a44565b6001600160a01b038116610a3b576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610300565b61026f81610a8a565b6000546001600160a01b03163314610284576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610300565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600260015403610b2e576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600155565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610b9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc19190610d16565b6109eb5760405162461bcd60e51b815260206004820152601560248201527f546f6b656e207472616e73666572206661696c656400000000000000000000006044820152606401610300565b600060208284031215610c1f57600080fd5b5035919050565b600080600060608486031215610c3b57600080fd5b505081359360208301359350604090920135919050565b600060208284031215610c6457600080fd5b81356001600160a01b0381168114610c7b57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610cab57610cab610c82565b92915050565b8082028115828204841417610cab57610cab610c82565b600082610ce557634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610cab57610cab610c82565b600060208284031215610d0f57600080fd5b5051919050565b600060208284031215610d2857600080fd5b81518015158114610c7b57600080fdfea2646970667358221220d5c2c0bd4f2fbb24ecd20f2fa739798a1af1cbfe156c4a342ec3de85c5c667af64736f6c63430008170033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "distributeFunds(uint256,uint256,uint256)": {
        "details": "This function is nonReentrant to prevent reentrancy attacks",
        "params": {
          "_percentageQeth": "percentage of ETH to send to QETH",
          "_percentageQrt": "percentage of ETH to send to QRT",
          "_percentageQsd": "percentage of ETH to send to QSD"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "distributeFunds(uint256,uint256,uint256)": {
        "notice": "Distribute FundsThis function distributes ETH to the LST contracts"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/Compose.sol:Compose",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1700,
        "contract": "contracts/Compose.sol:Compose",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 4367,
        "contract": "contracts/Compose.sol:Compose",
        "label": "minAmountBuy",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}